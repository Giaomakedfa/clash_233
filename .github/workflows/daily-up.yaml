name: "clash proxy provider 2"

on:
  schedule:
    - cron: '0 */12 * * *'  
  #push:
  #  branches:
  #     - master

  workflow_dispatch:
jobs:
  job_1:
    name: collect proxies
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 1
      
    - name: update pool 
      continue-on-error: true
      run: |
        #!/bin/bash
        # buggy script
        # continue with error
        set +e
        if [ ! -e ipvenv ]; then
        python -m venv ipvenv
        fi
        . ipvenv/bin/activate
        python -m pip install  geoip2 & 
        echo virtual env activate
        date
        if [ ! -f pool_etc ];then
        cat >pool_etc<<-EEE
        https://sspool.herokuapp.com/clash/proxies
        https://fq.lonxin.net/clash/proxies
        EEE
        fi
        down_from_list() {
        while read url;do
        filename=tmp_$RANDOM.yaml
        echo GET $url TO $filename
        ( wget -q -T 15 --no-check-certificate -O $filename $url  && echo $filename job done )&
        done<$1
        echo done $1
        }
        #down_from_list pool.txt
        down_from_list pool_etc
        echo wait for done
        ( sleep 60 && pidof wget && killall wget )&
        wait
        date
    - name: update repo
      continue-on-error: true 
      run: | 
        set +e  
        . ipvenv/bin/activate
        echo working dir is `pwd`
        uuid=`cat  /proc/sys/kernel/random/uuid`
        np=${uuid:0:8}
        for j in speed_short.yaml tmp*.yaml ; do
        cat $j | yq -P 'sort_keys(..) ' |yq 'del(.proxies.[].name)'| yq 'del(.proxies.[].servername)' |yq 'del(.proxies.[].country)'|yq 'del(.proxies.[].ws-opts.headers)'| yq 'del(.proxies.[].ws-headers)' | yq '.proxies.[] style="flow"' |sed '/%/d'| sed -n "/}$/p"| sed -n "/port/p"| sed -E 's@ws-path: ([^,]*)@ws-opts: {path: \1}@'|sed -E  's/^  - \{//;s/\}$//'  
        done  |awk '!a[$0]++' | awk -v np=$np '{if(match($0,"skip-cert-verify: true")){file="x.yaml"}else{file="z.yaml"}{ print "  - {" $0 ",\42name\42:\42_" np NR "\42}" > file }}'
        sed -i "1i proxies:" z.yaml
        sed -i "1i proxies:" x.yaml
        #sed -i "s/headers: ''/headers: {}/g" x.yaml
        cat >y.yaml<<-EOF
        mixed-port: 7890
        ipv6: true
        mode: rule
        #log-level: silent
        proxy-groups:
          - name: S2
            type: select
            use:
              - px
              - pz
          - name: S1
            type: select
            use:
              - px
              - pz
        rules:
          - DOMAIN-KEYWORD,microsoft,S1
          - MATCH,S2
        proxy-providers:
         px:
          type: file
          interval: 9600
          path: x.yaml
          health-check:
            enable: true
            interval: 600
            url: http://www.gstatic.com/generate_204
         pz:
          type: file
          interval: 9600
          path: z.yaml
          health-check:
            enable: true
            interval: 600
            url: http://www.gstatic.com/generate_204
        EOF
        if [  ! -f clash ]; then
        os_type=linux
        cpu_type=amd64
        clash_bin_url="https://github.com/Dreamacro/clash/releases"
        clash_html=tmp$RANDOM.html
        wget -q -O $clash_html https://github.com/Dreamacro/clash/releases
        clash_bin_url="https://github.com$( cat $clash_html | grep ".gz" | grep "<a href=" | grep $os_type | head | grep $cpu_type | sed -E 's/.*href="([^"]*)".*/\1/' )"
        wget -q -O clash.gz $clash_bin_url
        gunzip clash.gz
        git add clash
        fi
        [ ! -x clash ] && chmod a+x clash
        ./clash -d . -f y.yaml  -ext-ctl "127.0.0.1:9090" &
        if true; then
        sleep 90  
        fi
        curl -s  http://127.0.0.1:9090/providers/proxies| awk -F, 'BEGIN{RS="(,\42delay\42)|(,\42udp\42)"}{if(NF == 3 && !match($1,/:0/))print $2 > "alive-list.txt"}'
        j=1
        url1="https://microsoft.com"
        url2="https://bing.com"
        timeout=7
        proxy="http://127.0.0.1:7890"
        #proxy2="http://[::1]:7890"
        port=9090
        peer()
        {
        data=$2
        num=$1
        good="good$num.txt"
        bad="bad$num.txt"
        if [ 1 = $num ] ;then
        url=$url1
        #local=53110-53119
        else
        url=$url2
        #local=53110-53119
        fi
        t=$(curl -s -X PUT -w "%{http_code}" -d "{$data}" "http://127.0.0.1:$port/proxies/S$num")
        r=$(curl -s -w "%{http_code}" -o /dev/null -m $timeout -x $proxy $url)
        s=$?
        if [ 200 = $r ] ; then
        file=$good
        elif [ 302 = $r ] ;then
        file=$good
        elif [ 301 = $r ] ;then
        file=$good
        else
        file=$bad
        fi
        echo $data $file $t $r $s
        echo $data >> $file
        }
        sleep 1 &
        w1=$!
        w2=$!
        if [ ! 1 ] ;then
        for data in `cat alive-list.txt`;do
        num=$(( $j % 2 ))
        if [ $num = 1 ] ;then
        wait $w1
        peer 1 $data &
        w1=$!
        else
        wait $w2
        peer 2 $data &
        w2=$!
        fi
        j=$(( $j + 1 ))
        done
        wait $w1
        wait $w2
        fi
        mkfifo queue
        exec 99<>queue
        worker(){
        while [ 1 ];do
        read -u99 data
        [ 'done' == "$data" ] && break
        peer "$1" "$data"
        done&
        }
        if [ 1 ];then
        cat alive-list.txt
        echo done
        echo done
        fi>&99 &
        p=$!
        worker 1
        p1=$!
        worker 2
        p2=$!
        wait $p
        wait $p1
        wait $p2
        ls *.txt
        awk 'BEGIN{FS=",";f="speed_short.yaml";print "proxies:" > f;while ((getline n < "good1.txt") >0)a[n "}"]; while ((getline n < "good2.txt") >0)a[n "}"]}{if($NF in a)print $0 >f}' x.yaml z.yaml
        python ./add_ip.py
        sed -Ei 's!"([^"]*)"}#([^#]*)#([^#]*)#$!"\2_\3\1"}!' speed.yaml
        echo 'proxies:' > speed_short.yaml
        gawk '{if (match($0,/server:[ "]*([^,"]*)/,a)&&!b[a[1]]++) print}' speed.yaml >> speed_short.yaml
        git config --global user.name "jw853355718" 
        git config --global user.email "17853355718@139.com"
        git add Country.mmdb speed_short.yaml speed.yaml && echo "Git Added"
        git commit -m 'github runner commit' && echo "Git Committed"
        git push -u origin master && echo "Git Pushed Origin"
    - name: update cache
      run: | 
        cat -n x.yaml
        cat -n z.yaml
        sleep 15
        curl https://purge.jsdelivr.net/gh/jw853355718/clash_233/speed.yaml
    - name: Failure test
      if: failure()
      run: | 
        ls
        echo "Error on running!"
